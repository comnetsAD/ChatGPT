Yes. Break and ties and then apply the stable matching algorithm on the resulting preference lists. Illustrating Lexicographically, that is a man m is indifferent between women wi and wj then wi appears on m’s preference list before wj if i < j and if j < i wi appears before wi. Otherwise, inversely w is indifferent between two men mi and mj, then mi appears on w’s preference list before mj if i < j and if j < i mj appears before mi. Defining the preference lists, run the stable matching algorithm. We got that the matching concluded would have no strong instability, but that’s true cause any string instability would be an instability for the match produced by the stable matching algorithm, yet we that the algorithm produced a stable matching with no instabilities.

