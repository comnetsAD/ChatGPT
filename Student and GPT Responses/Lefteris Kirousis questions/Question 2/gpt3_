
The statement is not always true, it can be disproved by a counterexample.
A counterexample can be constructed by considering f(n) = n^2 and g(n) = n. It is clear that f(n) is O(g(n)) as f(n) <= c1 * g(n) for c1 = 1 and n > n1 = 1. However, log f(n) = 2 log n, while log g(n) = log n. Therefore, 2 log n is not O(log n) as it grows faster than log n and thus log f(n) is not O(log g(n))
Another example is f(n) = 2^n and g(n) = n! which f(n) is O(g(n)) but log f(n) = nlog2 is not O(log g(n)) = log(n!) as the former is faster than the latter.
It is worth mentioning that O notation provides an upper bound on the rate of growth of a function and the relationship between two functions f and g does not necessarily imply a similar relationship between log f and log g.

