Linear time: Pair all the cards together, and check equivalency of all the pairs. In case, we have n as an odd number, one card will be unmatched. In case of not equivalent of each pair, both cards will be castoff. More ever, in the case of equivalent pairs, we will keep one of the two and keeping the unmatched card, so if n is odd. We can use subroutine Eliminate.
Observing indications to use liner time algorithm, in case of equivalence class with more n/2 cards, than the same equivalence class have to also have more than half of the cards after calling the Eliminate function. True, as when both cards in pair discarded, then at least one of them can be form the most equivalence class. We only have Fn/21 cards remaining after calling ELIMINATE on a set of n cards, which takes n/2 tests. When there is only one card left, its equivalent is the only way to get a majority. We compare this card to every other card in the stack to see if its equivalence class has had more than n/2 elements.
For all the eliminates, this method uses n/2 + n/4 +... tests, and as well as n -1 tests for the last counting for a sum that is less than 2n tests.

