First, the Need matrix is calculated where the Need for each process and each resource is Max-Allocated. Then, according to the Need matrix and given that there are (2, 1, 0, 0) resources are available, the only process that can move forward is return from P1 because it does not need any more extra resources. Now the Available is (2, 1, 1, 2). The next process that can go in is P4 with need (2, 0, 0, 2). After P4 returns the available is (4, 4, 6, 6). After that, P5 gets the resources and returns. The new available now is (4, 7, 9, 8) and then P2 enters and returns, making the available (6, 7, 9, 8). Lastly, P3 goes in and returns its resources and the final available is (6, 7, 12, 12). The system is safe
 unsafe state assuming that the available is (2, 1, 0, 0) and the Max, allocated values are as displayed on the table. If the request for P3 (0, 1, 0, 0) is granted immediately then the new available is (2, 0, 0, 0). With this, P1 can return its resources making the new available (2, 0, 1, 2). P4 can go in and return all of its resources, changing available to (4, 3, 6, 6). After P4, P5 can go in and return all of its resources, making the available (4, 6, 9, 8). At this point, there is only P3 and P2 left with each having Need (6, 5, 2, 2) and (0, 7, 5, 0) respectively. We have reached an unsafe state because the available resources cannot satisfy either of the processes. The sequence P5 -> P3 -> P2 -> P1 -> P4 is unattainable from the beginning. The system is unsafe.


