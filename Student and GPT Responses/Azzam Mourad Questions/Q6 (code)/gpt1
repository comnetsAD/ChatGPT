#include <stdio.h>
#include <stdlib.h>
#include <sys/mman.h>
#include <sys/wait.h>
#include <unistd.h>

int main() {
    int* shared_mem = mmap(NULL, sizeof(int), PROT_READ | PROT_WRITE, MAP_SHARED | MAP_ANONYMOUS, -1, 0);
    *shared_mem = 0;

    pid_t pid1 = fork();
    if (pid1 == 0) {
        for (int i = 0; i < 10000; i++) {
            (*shared_mem)++;
        }
        printf("Child 1 %d\n", *shared_mem);
        exit(0);
    } else {
        pid_t pid2 = fork();
        if (pid2 == 0) {
            for (int i = 0; i < 5000; i++) {
                (*shared_mem)++;
            }
            printf("Child 2 %d\n", *shared_mem);
            exit(0);
        } else {
            wait(NULL);
            wait(NULL);
            for (int i = 0; i < 5000; i++) {
                (*shared_mem)++;
            }
            printf("Parent %d\n", *shared_mem);
        }
    }

    munmap(shared_mem, sizeof(int));
    return 0;
}


