In the software, right-to-left addition produces results that are more accurate than left-to-right addition. This occurs because bigger numbers are added first when adding from right to left, and larger values have fewer relative errors than smaller ones. The little numbers are added first when adding from left to right, and because of their small size, they are more prone to relative mistake. The amount of numerical mistakes while adding a series of numbers depends on the order in which they are added. Because floating-point arithmetic is not associative, this occurs. As a consequence, the ultimate outcome may vary depending on the order of additions. The software uses an alternating harmonic series, log(2) as the total, and the sequence of the digits is important. The relative inaccuracy is reduced and the outcome is more accurate by adding the biggest numbers first and the smallest ones last. The result produced by adding from the right to the left is found to be closer to the predicted value of log(2) than the result obtained by adding from the left to the right when the program is executed. 