Since floating-point arithmetic is not associative, the order in which the integers are added in the code might effect the final output. This implies that the accumulation of mistakes in the final result might be affected by the sequence in which the numbers are added. Since tiny numbers are added first in left-to-right arithmetic, their relative inaccuracy is magnified by the bigger values. As a consequence, when the little numbers are added first, more inaccuracy is introduced into the overall calculation. It is more accurate to add from right to left, since bigger numbers are added first. When bigger numbers are added first, less variation in the final result is introduced. In this code, the sequence of the integers counts since the series being added is an alternating series with a zero total. Since the relative inaccuracy generated by the little numbers is reduced by adding the bigger values first, doing the addition from right to left yields a more precise answer. 