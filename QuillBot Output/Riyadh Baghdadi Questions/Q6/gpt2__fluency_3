Because floating-point arithmetic is not associative, the order in which the integers are added in the program might effect the final output. This implies that the sequence in which the numbers are added affects how mistakes accumulate in the final output. When adding from left to right, the little numbers are added first, and their relative inaccuracy is greater than that of bigger values. This implies that when little numbers are added first, they inject more inaccuracy into the final result. When adding from right to left, the bigger numbers are added first, and their relative inaccuracy is lower. This indicates that when bigger numbers are added first, they carry less inaccuracy into the final result. Because the series being added in this program is an alternating series with a total of 0, the sequence of the integers counts. As a consequence, adding from right to left produces a more accurate answer since the relative inaccuracy generated by the little numbers is reduced by first adding the bigger values. 