Better precision is achieved while adding from right to left in the software. This is due to the fact that when addition from right to left, bigger numbers are added first, and their relative inaccuracy is less than that of smaller ones. The relative inaccuracy of the sum is magnified for the smaller numbers that come first in a left-to-right addition. When performing arithmetic operations on a series of integers, the accumulation of numerical mistakes relies on the order in which the operations are performed. It's because floating-point arithmetic isn't associative. Accordingly, the sum might be affected by the sequence in which the additions are performed. The total of the series is log(2), the series is alternating harmonic, and the order of the integers is significant in the program. The relative inaccuracy is reduced and the accuracy of the final result is improved if the biggest numbers are added first and the smallest numbers are added last. When the program is executed, it is seen that the value obtained by adding from right to left is much closer to the predicted value of log(2) than the value produced by adding from left to right. 