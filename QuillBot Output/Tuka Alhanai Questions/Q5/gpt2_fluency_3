A programming paradigm that emphasizes on the use of objects and their interactions to design and build software is known as an object-oriented approach. The program in object-oriented programming is made up of objects, which are instances of classes, and the classes are structured in a hierarchy of inheritance. Each object has a unique state and behavior, and it communicates with other objects through methods and messages. A non-object-oriented programming technique, often known as structured or procedural programming, is a programming paradigm that concentrates on the design and writing of software using processes and functions. A program in structured programming is made up of a series of instructions that are grouped into procedures and functions, which are reusable blocks of code. The program's state is shared by all procedures and functions, and there is no data encapsulation. In essence, the primary distinction between an object-oriented approach to programming and a non-object-oriented approach is how the code is organized and structured. Object-oriented programming arranges code around objects, which are instances of classes, and focuses on how these objects interact with one another. Non-object-oriented programming arranges code around procedures and functions, with an emphasis on the program's control flow. Object-oriented programming also provides for data encapsulation and abstraction, making it simpler to comprehend and maintain than non-object-oriented programming. 