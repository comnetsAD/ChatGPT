A connection with transmission rate R bps takes L / R seconds to send a packet of L bits. The overall file transmission time from Host A to Host B is the sum of the three link transmission periods. Thus, file transmission takes: T = 3 * L/R. Minimizing L reduces T. Minimize S because L = 80 + S. To reduce S, we must determine the value that minimizes packet size L while transmitting the file. S must be big enough to transmit the full file as the file is broken up of segments of S bits. If the file has N segments, its size is N * S bits. To send the complete file, we require S >= F / N. Thus, to reduce file transfer time from Host A to Host B, we must select S that meets the following two conditions: 1. S >= F / N (to transfer the complete file) (to transmit the entire file) 2. S is smallest (to minimize the packet size L) S = F / N's ceiling meets these requirements. The lowest integer larger than or equal to a number is its ceiling. 3.2's ceiling is 4, while 4.9's is 5. Python's math.ceil function calculates number ceilings: Copy code import math S=math.ceil(F / N). This ensures that S is big enough to transport the file and small enough to reduce packet size L. 