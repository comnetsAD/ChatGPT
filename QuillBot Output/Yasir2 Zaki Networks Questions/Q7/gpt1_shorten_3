First, we must determine the total of the three 8-bit bytes to obtain their 1's complement. Bytes may be added: 01010011\s+01100110\s+01110100\s10111001 (137 in decimal) (137 in decimal) Flipping all bits yields the sum's 1's complement: 01000110 (70 in decimal) (70 in decimal) The sum of the three 8-bit bytes' 1's complement. UDP and TCP employ the 1's complement of the sum in their checksums so the receiver may identify problems by adding the checksum to the bytes being transferred. No mistakes were found if the binary result is all 1's. If no mistakes were discovered, the receiver's total of the transmitted bytes and checksum should be a binary integer with all 1's. Retransmit if the result is not a binary number with all 1's. Example: (checksum) 11111111 (255 in decimal) In this situation, the receiver adds the total of the transmitted bytes to the checksum and gets a binary number with all 1's. The transmission was accepted without faults. However, consider the transmission: 01010011\s+01100110\s+01110100\s+01000111 (wrong checksum) 00000000 (0 in decimal) (0 in decimal) In this situation, the receiver adds the total of the transmitted bytes to the checksum, which is not all 1's in binary. Retransmitting shows a mistake. 