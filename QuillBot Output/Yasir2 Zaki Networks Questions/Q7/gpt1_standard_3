We must first determine the total of the three 8-bit bytes in order to get the 1's complement of that sum. It is possible to compute the total of the bytes as follows: 01010011\s+01100110\s+01110100\s10111001 (137 in decimal) (137 in decimal) Flipping all of the bits yields the 1's complement of this total, which is as follows: 01000110 (70 in decimal) (70 in decimal) The total of the three 8-bit bytes is represented as the 1's complement. Because it enables the receiver to discover problems by simply adding the checksum to the total of the bytes being transferred, UDP and TCP employ the 1's complement of the sum in their checksums. If the output is a binary number that only contains 1s, then there were no mistakes to be found. If no mistakes were found, for instance, the outcome of the receiver adding the total of the bytes being transferred to the checksum should be a value with only 1s in the binary format. If the outcome does not correspond to a binary number with all 1s, an error has occurred and the transmission has to be sent again. Take the following communication, for instance: (Checksum) 11111111 01010011 + 01100110 + 01110100 (255 in decimal) In this scenario, the receiver computes the total of the transmitted bytes and adds it to the checksum to get a number that is represented as all 1s in binary. This shows that there were no mistakes found and the transmission was approved. Contrarily, take into account the following transmission: 01010011\s+01100110\s+01110100\s+01000111 erroneous checksum 00000000 (0 in decimal) (0 in decimal) In this instance, the receiver computes the sum of the transmitted bytes and adds it to the checksum; the outcome is not a number that can be represented in binary as all 1s. This indicates that there was a problem and the transmission has to be sent again. 