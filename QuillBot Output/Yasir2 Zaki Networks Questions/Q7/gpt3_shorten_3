First, we must compute the sum of the three 8-bit bytes 01010011, 01100110, and 01110100 to obtain their 1s complement. We can add decimal numbers to bytes to achieve this. 1 * 2^7 + 0 * 2^6 + 1 * 2^5 + 0 * 2^4 + 0 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 83. 01100110 is 1 * 2^7 + 1 * 2^6 + 0 * 2^5 + 0. 4 + 1 * 2^3 + 1 * 2^2 + 0 * 2^ 1 + 1 * 2^0 = 102 01110100 is 1 * 2^7 + 1 * 2^6 + 1 * 2^5 + 1 4 + 0 * 2^3 + 1 * 2^2 + 0 * 2^ 1 + 0 * 2^0 = 116 Three bytes equal 301. First find the sum's 2s complement to determine its 1s complement. Inverting all portions of the total and adding 1 does this. Inverting all 301 bits yields its 2s complement: 11101100 = ~301. 11101100 + 1 Equals 11101101, the 2s complement of 301. Inverting all bits of the 2s complement yields the sum's 1s complement: ~11101101 = 301's complement = 00010010. Thus, the total of the three 8-bit bytes 01010011, 01100110, and 01110100 is 00010010. UDP and TCP utilize 1s complement checksums to make error detection easy. The receiver may recalculate the checksum if the sender delivers it with the data. 