To calculate the 1's complement of the sum of the three 8-bit bytes, we must first compute the sum of the bytes. The total number of bytes may be determined as follows: 01010011\s+01100110\s+01110100\s10111001 (137 in decimal) (137 in decimal) By flipping all of the bits, we can get the 1's complement of this total, which gives us: 01000110 (70 in decimal) (70 in decimal) This is the total of the three 8-bit bytes multiplied by 1. Because it enables the receiver to discover mistakes by simply adding the checksum to the total of the bytes being transferred, UDP and TCP employ the 1's complement of the sum in their checksums. If the result is a number with all 1's in the binary form, it means no mistakes were found. If the receiver, for example, calculates the total of the bytes being broadcast and adds it to the checksum, the result should be a number with all 1's in the binary representation if no mistakes were found. If the result is not a number with all 1s in the binary format, an error has occurred and the transmission should be resent. Consider the following example of transmission: 11111111 01010011 +01100110 +01110100 +01000110 (checksum) (255 in decimal) In this situation, the receiver adds the total of the bytes being transferred to the checksum, yielding a number with all 1s in the binary representation. This means that no faults were found and that the communication was approved. Consider the following communication, on the other hand: 01010011\s+01100110\s+01110100\s+01000111 (Invalid checksum) 00000000 (0 in decimal) (0 in decimal) In this situation, the receiver adds the total of the transmitted bytes to the checksum, and the result is not a number with all 1's in the binary representation. This signifies that a mistake occurred and that the communication should be resent. 