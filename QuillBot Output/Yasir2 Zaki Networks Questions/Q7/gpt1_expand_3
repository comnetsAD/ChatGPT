In order to get the value that is the 1's complement of the sum of the three 8-bit bytes, we must first determine the sum of the bytes. The following formula may be used to get the total number of bytes: 01010011\s+01100110\s+01110100\s10111001 (137 in decimal) (137 in decimal) Flipping all of the bits results in the following when applied to this sum, which is the 1's complement of the total. 01000110 (70 in decimal) (70 in decimal) This is the value that is obtained by subtracting one from the total of the three 8-bit bytes. Both UDP and TCP employ the 1's complement of the sum in their checksums because it enables the receiver to discover problems by just adding the checksum to the total number of bytes that are being transferred. This is the case because the 1's complement of the sum is the 1's complement of the sum. If the result is a number that, when represented in binary, has only the value 1, this implies that no mistakes were found throughout the process. For instance, if the receiver computes the total of the bytes that are now being broadcast and adds it to the checksum, the result should be a number with all 1's in the binary representation if there were no mistakes found in the data. This is the case even if the checksum was incorrect. If the result is not a number that can be represented in binary as all ones, then an error has happened, and the transmission has to be redone. If the result is a number that can be represented as all ones, then there was no mistake. Take, for instance, the following broadcast as an example: 01010011 +01100110 +01110100 +01000110 (checksum) 11111111 (255 in decimal) In this scenario, the receiver computes the total amount of bytes that are being communicated, adds that number to the checksum, and the result is a number whose binary representation is made up entirely of ones. This means that there were no mistakes found during the transmission, and it may now be accepted. Take into consideration, on the other hand, the following transmission: 01010011\s+01100110\s+01110100\s+01000111 (the checksum was wrong) 00000000 (0 in decimal) (0 in decimal) In this scenario, the receiver computes the total amount of bytes that are being communicated and adds that number to the checksum. The result of this calculation is not a number that can be represented in binary with all 1s. This is a warning indicating a mistake has taken place, and the transmission has to be redone. 