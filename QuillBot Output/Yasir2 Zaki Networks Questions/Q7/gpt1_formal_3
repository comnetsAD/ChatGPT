To get the 1's complement of the sum of three 8-bit bytes, we must first calculate the total of the bytes. The following formula may be used to compute the total number of bytes: 01010011\s+01100110\s+01110100\s10111001 (137 in decimal) (137 in decimal) The 1's complement of this total is obtained by flipping all the bits, which results in: 01000110 (70 in decimal) (70 in decimal) This is the 1's complement of the three 8-bit bytes' total. UDP and TCP employ the 1's complement of the sum in their checksums because it enables the receiver to identify problems by simply adding the checksum to the sum of the sent bytes. If the result is a binary number consisting of just ones, it means that no mistakes were discovered. For instance, if no mistakes were identified, the outcome of the receiver calculating the total of the bytes being transferred and adding it to the checksum should be a binary integer containing only ones. If the result is not a binary number consisting of all 1s, an error has occurred and the transmission must be repeated. Consider the following communication as an example: 01010011 +01100110 +01110100 +01000110 (checksum) 11111111 (255 in decimal) In this instance, the receiver calculates the total of the bytes being broadcast and adds it to the checksum, resulting in a binary number with all 1s. This implies that no transmission faults were found and that the transmission was approved. Consider instead the following transmission: 01010011\s+01100110\s+01110100\s+01000111 (invalid checksum) 00000000 (0 in decimal) (0 in decimal) In this instance, the receiver computes the total of the bytes being broadcast and adds it to the checksum; the result is not a binary integer consisting of all 1s. This signifies that a mistake has occurred and the communication must be resent. 