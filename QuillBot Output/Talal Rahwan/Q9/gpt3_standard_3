Dynamic size: In contrast to arrays, which have a fixed size once constructed, linked lists may expand and contract in size as required. Due to this, linked lists are more advantageous in scenarios where the volume of data being kept is uncertain or prone to vary. Ease of insertion and deletion: Adding or deleting an element from a linked list just takes changing a few pointers, but shifting all the items in an array often necessitates moving the elements after the insertion or deletion point. As a result, linked lists are more effective in situations where there will be many insertions and deletions. 