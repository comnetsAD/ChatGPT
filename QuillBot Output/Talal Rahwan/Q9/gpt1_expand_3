Size that may vary during runtime Linked Lists are dynamic data structures, which implies that their size can change at any point during the execution of the program. This indicates that memory allocation may take place while the application is running, making it more efficient for programs that regularly need to add or delete parts from the data structure. Efficient insertions and deletions: Linked Lists are significantly more efficient than arrays when it comes to inserting and deleting elements from the middle of the list. This is because it only requires changing the pointers of the elements that are surrounding the point where the element is being inserted or deleted, whereas arrays require shifting all of the elements after the point where the element is being inserted or deleted. 