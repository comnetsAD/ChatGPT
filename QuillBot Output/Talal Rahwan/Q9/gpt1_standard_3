Dynamic size: Because linked lists are dynamic data structures, their size may vary while the program is being executed. As a result, memory allocation may take place while the program is running, which makes it more effective for applications that often add or delete parts. Effective additions and deletions: Linked Lists are far more effective at adding and removing items from the center of the list since it just involves altering the pointers of the nearby members, while arrays require shifting all elements after the insertion or deletion point. 