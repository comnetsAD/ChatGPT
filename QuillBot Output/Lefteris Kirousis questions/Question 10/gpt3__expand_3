No, it is not feasible to have an optimum scheduling of tasks that both reduces the amount of lateness and includes an inversion in the same schedule. An inversion in a schedule happens when two tasks are allocated to the same machine in such a manner that the project that should be done first according to their respective deadlines is actually finished after the other job has been completed. This is the opposite of what should happen. Because inversions have the potential to lengthen the amount of time it takes for projects to finish, the most effective schedule will always work to keep job lateness to a minimum and prevent inversions wherever possible. Even though it may appear that inversion could be useful in certain circumstances, such as when two jobs have very tight deadlines, there are other scheduling algorithms that can be used to solve such a problem without introducing inversions. One such algorithm is called the Earliest Deadline First (EDF) algorithm. This algorithm prioritizes jobs based on when their deadlines are the earliest. Therefore, an optimum schedule should never include inversions since doing so would be in violation of the least lateness constraint. 