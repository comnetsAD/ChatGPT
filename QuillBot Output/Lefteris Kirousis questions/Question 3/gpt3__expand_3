This is a correct assertion. In order to demonstrate that this assertion is true, we need only suppose that f(n) is O(g(n)), which indicates that there are positive constants c1 and n1 such that, for any n that is greater than n1, f(n) is less than or equal to c1 * g. (n). Therefore, for every n that are more than n1, 2f(n) is less than 2c1 * g(n). Therefore, if we choose c = 2c1 and n0 = n1, we may deduce that 2f(n) is equivalent to O(2g(n)). As a result of the fact that the big O notation is a tool that compares the pace of growth of two functions rather than their precise values, the preceding statement is accurate. It is vital to keep in mind that the big O notation is a tool. When applied to a function, multiplying or dividing it by a constant does not affect the pace at which the function increases. 