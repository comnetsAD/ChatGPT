The assertion is accurate. To demonstrate this, we may suppose that f(n) is O(g(n)), which means that there exist constants c1 and n1 such that for any n > n1, f(n) = c1 * g. (n). Consequently, 2f(n) = 2c1 * g(n) for any n > n1. So, we may conclude that 2f(n) is O(2g(n)) if we replace c with 2c1 and n0 with n1 Noting that the big O notation compares the pace of development of two functions rather than their precise values, this assertion is correct. Multiplying or dividing a function by a constant has no effect on the function's pace of development. 