The assertion is accurate. We may suppose that f(n) is O(g(n)), which means that there are positive constants c1 and n1 such that for every n > n1, f(n) = c1 * g, in order to demonstrate this claim (n). As a result, for any n > n1, 2f(n) = 2c1 * g(n). By using c= 2c1 and n0 = n1, we may conclude that 2f(n) equals O(2g(n)). This assertion is accurate since the big O notation is a tool that compares the pace of growth of two functions rather than their precise values. The rate of development of a function is unaffected by adding, subtracting, or multiplying by a constant. 