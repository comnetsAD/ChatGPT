Algorithm: BFS from node s. BFS again from node t1. Third BFS from node t2. Iterate over all the network nodes and identify the node u with the biggest distance from s, but for which the total of the distances from s to t1 and t2 through u is not more than the distance of s from t1 and t2. It does three BFS searches, which take O(n+m) time each, and then iterates over all the nodes, which takes O(n). Thus, the total time complexity is O(3(n+m)), or (m). 