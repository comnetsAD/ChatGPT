Executing three breadth-first search (BFS) algorithms is one strategy for locating a node u like this one. The first BFS method begins at node s and determines the shortest path from s to t1 by minimizing the number of hops between the two nodes. The second BFS method begins at node s and determines the shortest distance from s to t2 by finding the node with the smallest distance. The third iteration of the BFS algorithm begins at node s and determines the node that is the furthest away from s. This is done while ensuring that the distance from s to t1 and the distance from s to t2 through the node u are not greater than the distances that were determined by the first and second iterations of the BFS algorithm. Because it makes use of BFS, which has a time complexity of O(m+n), and because we are running it three times, this method takes O(m) time to complete each iteration. 