The following is the algorithm: Perform a breadth-first search (BFS) beginning at node s, and record the distance between each node and s. This process requires O(m + n) time. Execute a second BFS from node t1 and record the distance between t1 and each node. This operation also requires O(m + n) time. Execute a third BFS starting at node t2 and note the distance between each node and t2. This operation also requires O(m + n) time. Iterate over each node and choose the node u that meets the specified criteria. The distance between u and s is maximized. The length of the route from s to t1 that includes u cannot exceed the distance between s and t1. The length of the route from s to t2 that includes u cannot exceed the distance between s and t2. Return the given node. The method requires O(m + n) time since it executes three BFS, each of which requires O(m + n) time. 