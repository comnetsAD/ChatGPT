The following is the algorithm: Conduct a Breadth-First Search (BFS) beginning with node s. Perform a second BFS beginning with node t1. Execute a third BFS beginning at node t2 Find the node u with the greatest distance from s, but for which the total of the distances from s to t1 and t2 through s is not more than the distances from s to t1 and t2 via s. This method does three BFS searches, which each take O(n+m) time, and then iterates over all the nodes, which takes O(n) time. Consequently, the total time complexity is O(3(n+m)), which is O. (m). 