The algorithm is described in the following way: Carry out a search using the breadth-first strategy (BFS), beginning with node s. Repeat the BFS process, this time beginning at node t1. Carry out a third BFS procedure, beginning at node t2. It is necessary to iterate over all of the nodes in the graph in order to locate the node u that is the furthest away from s, but for which the total of the distances from s to t1 and from s to t2 through u does not exceed the distances that s has from t1 and t2. This approach requires O(m) amount of time since it first does three BFS searches, which need O(n+m) amount of time each, and then it iterates over all of the nodes, which requires O(n) amount of time. As a result, the entire time complexity is expressed as O(3(n+m)), which is equivalent to O. (m). 