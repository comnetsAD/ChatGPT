Algorithm: Start a breadth-first search (BFS) from node s and note each node's distance. This step takes O(m+n) time. Record each node's distance from t1 in a second BFS. This step requires O(m + n) time. Record each node's distance from t2 in a third BFS. This step requires O(m + n) time. Iterate over all nodes and choose the one that meets these criteria: u is furthest from s. u's route from s to t1 is no longer than s's distance from t1. u's route from s to t2 is no longer than s's distance from t2. u. The method executes 3 BFS, which each require O(m+n) time. 