Their query is as follows: Is there a group of more than n/2 cards that are comparable to one another? Assume that the only practical action with the cards is to choose two and insert them into the equivalency tester. Provide a linear time prune and search method that determines if the majority of cards are identical and, if so, selects a representative for them (non-linear algorithms will not get credit). Start by pairing the cards arbitrarily, and then from each pair, remove one card if they are equivalent and both if they are not; rigorously demonstrate that if the majority of cards are equivalent, then the same is true of the cards remaining after pruning, and in this case, the majority of equivalent cards in the remaining part represents the majority of equivalent cards at the beginning. The algorithm should be stated thoroughly in natural language (English). Be cautious when n is an odd number (how do you handle the mismatched card in this case?). A summary of the evidence is insufficient. The solution algorithm for this issue is as follows: Begin by matching the n credit cards arbitrarily. Use the bank's equivalency tester for each pair of bank cards to discover if the cards are equal. If so, retain both cards and go to the next pair. If they are not, both cards are discarded. If there are an odd number of cards left after all pairings have been examined, discard the unmatched card. Repeat steps 2 and 3 until only one card remains or until there are no cards left. If just one card remains, it symbolizes the majority of its counterparts in the original collection of n cards. There is no majority of identical cards in the initial collection of n cards if there are no leftover cards. Proof: If the majority of cards in the initial collection of n cards are comparable, then the majority of cards left after pruning are likewise equivalent. Since the procedure begins by arbitrarily pairing the n cards, the chance that two equivalent cards are paired together is the same as the likelihood that two non-equivalent cards are paired together. If two identical cards are paired, both will be retained after the pruning procedure. If two cards that are not comparable are matched, both will be discarded. Therefore, the chance of discarding a card from the majority of comparable cards is the same as the likelihood of discarding a card from the minority of non-equivalent cards. As steps 2 and 3 are repeated, the number of remaining cards will decrease. In addition, the quantity of comparable cards will decrease at the same pace as non-equivalent cards. Therefore, the ratio of equivalent to non-equivalent cards stays unchanged. Following n/2 iterations, n/2 cards will remain. Since the ratio of equal to non-equivalent cards remains the same as it was at the start, the majority of remaining cards are equivalent. If n is an odd number, there will be one remaining unmatched card after the pruning procedure. Since it is equally probable that the mismatched card comes from the majority of comparable cards or the minority of non-equivalent cards, we may discard the unmatched card without compromising the algorithm's outcome. This technique can thus locate the majority of comparable cards in linear time. 