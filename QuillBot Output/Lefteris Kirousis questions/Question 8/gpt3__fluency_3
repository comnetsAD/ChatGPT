Their query is this: is there a group of more than n/2 cards in the collection of n cards that are all identical to one another? Assume that the only thing you can do with the cards is choose two of them and input them into the equivalency tester. Provide a linear time prune and search method that determines if the majority of cards are comparable to one another and, if so, locates a representative of them (non-linear algorithms will not get credit). Begin by randomly pairing the cards, and then from each pair prune one card if they are equivalent and both if they are not; rigorously prove that if the majority of cards are equivalent, then the same is true of the cards remaining after the pruning, and in this case the majority of equivalent cards in the remaining part represents the majority of equivalent cards at the start. The algorithm should be stated in detail in natural language (English). Take care to account for the scenario when n is odd (how do you deal with the mismatched card in this instance?). A summary of the evidence will not enough. This is the algorithm for solving this problem: Begin by arbitrarily matching the n bank cards. To establish if two bank cards are comparable, use the bank's equivalence tester for each pair. Keep both cards and go on to the next pair if they are. If they aren't, toss both cards. If there are an odd number of cards left after all couples have been checked, discard the unmatched card. Repeat steps 2 and 3 until there is only one card left or there are no cards left. If just one card remains, it symbolizes the majority of the comparable cards in the initial collection of n cards. There is no majority of identical cards in the initial collection of n cards if no cards remain. Proof: We can demonstrate that if the majority of cards in the initial collection of n cards are equal, then the majority of cards left after the pruning procedure are likewise comparable. Because the process begins by randomly pairing the n cards, the likelihood of two equivalent cards being paired together is the same as the probability of two non-equivalent cards being paired together. When two identical cards are paired together, both are maintained following the trimming process. When two non-equivalent cards are matched, both are discarded. As a result, the chance of discarding a card from the majority of comparable cards is the same as the likelihood of discarding a card from the minority of non-equivalent cards. The number of remaining cards will decrease as we repeat steps 2 and 3. In addition, the number of comparable cards will be lowered at the same pace as the number of non-equivalent cards. As a result, the proportion of comparable to non-equivalent cards stays constant. There will be n/2 cards left after n/2 repetitions. Because the proportion of identical cards to non-equivalent cards remains constant, the majority of cards left are equivalent. If n is an odd number, there will be one mismatched card left after the pruning procedure. We may reject the mismatched card without impacting the correctness of the algorithm's output since the unmatched card is just as likely to come from the majority of comparable cards as it is from the minority of non-equivalent cards. As a result, in linear time, our approach can locate the majority of comparable cards. 