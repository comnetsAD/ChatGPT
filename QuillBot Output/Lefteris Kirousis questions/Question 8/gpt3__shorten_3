Is there a set of more than n/2 cards that are equivalent? Assume you can only plug two cards into the equivalency tester. Provide a linear time prune and search technique that discovers a representative of the majority of cards if they are equal (non-linear algorithms will not get credit). Start by randomly pairing the cards, then prune one card if they are equivalent and both if they are not. Prove rigorously that if the majority of cards are equivalent, then the same is true of the cards remaining after pruning, and in this case the majority of equivalent cards in the remaining part represents the majority of equivalent cards at the beginning. Explain the algorithm in common words (English). Be mindful of the unusual situation (how do you handle the mismatched card?). Proofs must be detailed. Algorithm: Pair n bank cards randomly. Check each pair of bank cards using the bank's equivalency tester. If so, retain both cards and play the following pair. Discard both cards if not. If there are odd cards left after testing pairings, discard the unmatched card. Repeat steps 2 and 3 until there is one card or none. One card symbolizes a majority of comparable cards in the original n-card collection. If no cards remain, the initial collection of n cards has no majority of identical cards. Proof: This method works by proving that if the majority of cards in the initial collection of n cards are equal, then the majority of cards left after pruning are likewise equivalent. Since the method pairs the n cards arbitrarily, the chance of pairing two comparable cards is the same as pairing two non-equivalent cards. After trimming, identical cards are maintained. Discard both non-equivalent cards. Thus, the chance of discarding a majority-equivalent card is the same as discarding a minority-non-equivalent card. Repeating steps 2 and 3 will decrease the remaining cards. Equivalent cards will decrease at the same pace as non-equivalent cards. Thus, comparable cards and non-equivalent cards stay equal. n/2 iterations leave n/2 cards. The bulk of cards left are equal since the ratio of equivalent to non-equivalent cards is the same as at the start. After trimming, n odd cards will remain unmatched. We may reject the unpaired card without changing the algorithm's output since it's equally likely to be from the majority of comparable cards as the minority of non-equivalent cards. Thus, this approach finds most comparable cards linearly. 