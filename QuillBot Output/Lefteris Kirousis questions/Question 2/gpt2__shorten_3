Not always. Logarithms adjust the scale of a function, whereas big O notation compares the growth rate of two functions. Thus, f(n) and g(n) may not be related to log f(n) and log g(n) (n). f(n) = n^2 and g(n) = n are counterexamples. f(n) is O(g(n)) since f(n) <= c1 * g(n) for c1 = 1 and n > n1 = 1. Unlike log g(n), log f(n) = 2 log n. Log f(n) is not O(log g(n)) because 2 log n is not O(log n). Similarly, f(n) = 2^n and g(n) = n! where f(n) is O(g(n)) but log f(n) = nlog2 is not log(n! "If f(n) is O(g(n)) then log f(n) is O(log g(n))" is not necessarily true, and counterexamples may be shown. 