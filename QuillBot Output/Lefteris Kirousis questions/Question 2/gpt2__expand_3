The assertion does not hold true in all situations. The reason for this is because logarithms are used to adjust the scale of the function, while the big O notation is used to compare the rate of growth of two different functions. As a result, the fact that f(n) and g(n) have a connection does not necessarily imply that log f(n) and log g have a relationship (n). The expressions f(n) = n2 and g(n) = n are an example of a counterexample. Because f(n) is less than c1 times g(n) when n is more than n1 times 1, it is obvious that f(n) has the value O(g(n)). However, log f(n) = 2 log n, but log g(n) = log n. Because of this, 2 log n is not the same as O(log n), and as a consequence, log f(n) is not the same as O(log g(n)). Another example might be the expressions f(n) = 2n and g(n) = n! where f(n) is O(g(n)) but log f(n) = nlog2 is not O(log g(n)) = log(n!) In a nutshell, the assertion that "If f(n) is O(g(n)) then log f(n) is O(log g(n))" is not necessarily correct, and it is possible to present counterexamples that invalidate this assertion. 