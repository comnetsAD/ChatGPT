The assertion is not always accurate. Because logarithms are used to alter the scale of the function, big O notation is used to compare the growth rates of two functions. Consequently, a link between log f(n) and log g does not always follow from a relationship between f(n) and g(n) (n). F(n) = n2 and g(n) = n are two examples of a counterexample. Given that f(n) = c1 * g(n) for c1 = 1 and n > n1 = 1, it is evident that f(n) is O(g(n)). While log g(n) = log n, log f(n) = 2 log n. As a result, log f(n) is not O(log g(n)), and 2 log n is not O(log n). An additional example is f(n) = 2n and g(n) = n! where log f(n) = nlog2 is not O(log g(n)) = log(n!) but where f(n) is O(g(n)) In other words, there are counterexamples that show the assertion "If f(n) is O(g(n)) then log f(n) is O(log g(n))" is not necessarily true. 