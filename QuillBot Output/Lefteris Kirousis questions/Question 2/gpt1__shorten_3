Counterexample disproves the assertion. f(n) = n^2 and g(n) = n provide a counterexample. f(n) is O(g(n)) because f(n) <= c1 * g(n) for c1 = 1 and n > n1 = 1. Unlike log g(n), log f(n) = 2 log n. Log f(n) is not O(log g(n)) because 2 log n is not O(log n). In circumstances where g(n) = n^2 and f(n) = n^3, log f(n) = 3 log n and log g(n) = 2 log n, respectively. The large O notation compares functions' growth rates, not logarithm bases. 