The assertion is not always accurate. Logarithms are used to adjust the scale of a function, while the big O notation is used to compare the growth rates of two functions. Therefore, a link between log f(n) and log g is not always implied by the relationship between f(n) and g(n) (n). One counterexample is the expressions f(n) = n2 and g(n) = n. f(n) is obviously O(g(n)) as f(n) = c1 * g(n) for c1 = 1 and n > n1 = 1. However, log f(n) = 2 log n, but log g(n) = log n. Consequently, 2 log n does not equal O(log n), and log f(n) does not equal O(log g(n)). Another example is f(n) = 2^n and g(n) = n! f(n) is O(g(n)), however log f(n) = nlog2 is not O(log g(n)) = log(n)! The statement "If f(n) is O(g(n)), then log f(n) is O(log g(n))" is not necessarily true, and counterexamples may be produced to demonstrate this. 