A counterexample may be used to show that the assertion is not always true. Consider the expressions f(n) = n2 and g(n) = n to produce a counterexample. f(n) is obviously O(g(n)) as f(n) = c1 * g(n) for c1 = 1 and n > n1 = 1. However, log f(n) = 2 log n, but log g(n) = log n. As 2 log n grows faster than log n, 2 log n is not O(log n), and log f(n) is not O(log g(n)). Another example would be f(n) = 2n and g(n) = n! where f(n) is O(g(n)) when log f(n) equals n log2 is not equivalent to O(log g(n)) = log(n! ), since log2 is quicker. Notably, O notation sets an upper limit on the growth rate of a function, and the connection between f and g does not always imply a corresponding relationship between log f and log g. 