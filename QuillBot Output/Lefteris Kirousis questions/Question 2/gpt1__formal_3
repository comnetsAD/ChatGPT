Contradiction demonstrates that the assertion is not always true. Consider the expressions f(n) = n2 and g(n) = n to produce a counterexample. It is evident that f(n) is O(g(n)) because f(n) = c1 * g(n) for n > n1 = 1 and c1 = 1. Therefore, 2 log n is not O(log n), and hence log f(n) is not O(log g(n)) While in other circumstances like g(n) = n^2 and f(n) = n^3 then log f(n) equals O(log g(n)) since log f(n) = 3 log n and log g(n) = 2 log n Notably, the big O notation is a comparison of the rate of growth of functions and does not account for the base of the logarithm function. 