A binary search-like method is one technique to obtain a local minimum of the whole binary tree T using just O(log n) probes to the nodes of T: Start by probing the nodes at the middle level of the tree, which are the middle nodes of the tree. Compared to the values of their parent nodes, the probed nodes' values should be compared. Move to the left subtree of a probed node if its value is lower than its parent node. Move to the right subtree of a probed node if its value exceeds that of its parent node. Up until you reach a leaf node that is a local minimum, repeat step 2 iteratively. Since we only need to search the left or right subtree where the local minimum may reside, we can use this method to remove half of the tree in each step. Since the tree is complete and has log(n) levels, finding the local minimum simply requires using log(n) probes. For instance, finding a local minimum in a four-level full binary tree would require no more than three probes. Prior to probing the left or right leaf node, we would first probe the middle node at the second level of the tree, followed by the middle node at the third level of the tree (which will be the local minimum if it exists) Keep in mind that this strategy can only be used if we are aware of the middle level of the tree, which may be determined using O(log n) operations. 