A binary search-like strategy may identify a local minimum of the whole binary tree T with O(log n) probes to its nodes: Probe the tree's middle nodes at the middle level. Compare probed nodes to their parents. Move to the left subtree of a probed node whose value is smaller than its parent. If a probed node is larger than its parent, go to its right subtree. Step 2 iteratively until you reach a local minimum leaf node. Since we only need to search the left or right subtree for the local minimum, this strategy eliminates half the tree in each step. We just need log(n) probes to discover the local minimum since the tree is complete. A local minimum in a four-level full binary tree requires at most three probes. We would explore the center nodes at the second and third levels of the tree, then the left or right leaf nodes (which will be the local minimum if it exists) This solution requires knowing the tree's middle level, which can be calculated in O(log n) operations. 