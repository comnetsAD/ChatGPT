We can apply a divide-and-conquer strategy to get a local minimum of the whole binary tree T. The first node we investigate is the root of the tree. Analyze the root's value in relation to that of its left and right offspring. To indicate a local minimum, we will return the root value if it is smaller than any of its children. If not, we go to the subtree where the root value is bigger than the child value and do Step 2 once again. The process of step 2 should be repeated recursively until a local minimum is reached. Since we only need to search the subtree where the local minimum may reside, we can reduce half of the tree at each stage using this method. We just require log(n) probes to get the local minimum since the tree is full and has height log(n). In a full binary tree with four levels, for instance, we would require no more than four probes to locate the minimum. We would start by probing the parent, then the kid, then the grandchild, and lastly the great-grandchild, in descending order of size (which will be the local minimum if it exists). 