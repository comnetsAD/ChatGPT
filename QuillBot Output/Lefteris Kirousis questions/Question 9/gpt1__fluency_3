We can apply a divide-and-conquer strategy to obtain a local minimum of the whole binary tree T. Begin with the root of the tree, which is the first node we investigate. Contrast the root's value with the values of its left and right offspring. If the root's value is smaller than the sum of its offspring, it is a local minimum, and we return it. If not, we go to the subtree where the root value is bigger than the child value and repeat step 2. Repetition step 2 until a local minimum is obtained. Because we only need to search the subtree where the local minimum may reside, we can remove half of the tree in each phase. Because the tree has a height log(n), we only need log(n) probes to discover the local minimum. In a four-level full binary tree, for example, we would only need four probes to discover a local minimum. We'd start with the root, then the left or right kid (depending on which is smaller), the left or right grandchild (depending on which is smaller), and lastly the left or right great-grandchild (which will be the local minimum if it exists). 