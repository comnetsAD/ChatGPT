A binary search-like strategy may be used to identify a local minimum of the whole binary tree T using just O(log n) probes to the nodes of T: Begin probing at the middle level of the tree, which includes the tree's middle nodes. Compare the probed nodes' values to the values of their parent nodes. If the value of a probed node is smaller than that of its parent node, shift to that node's left subtree. If the value of a probed node is larger than the value of its parent node, go to the node's right subtree. Repetition step 2 until you reach a leaf node that is a local minimum. Because we only need to search the left or right subtree where the local minimum may reside, we can remove half of the tree in each phase. Because the tree has log(n) levels, we only require log(n) probes to discover the local minimum. In a four-level full binary tree, for example, we would only need three probes to discover a local minimum. We would first probe the middle nodes at the second level of the tree, then the middle nodes at the third level, and ultimately the left or right leaf node (which will be the local minimum if it exists) It should be noted that this strategy is only practicable provided we know the tree's middle level, which can be calculated with O(log n) operations. 