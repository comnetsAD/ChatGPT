We can apply a divide-and-conquer strategy to discover a local minimum of the whole binary tree T. Start at the tree's root, which is the first node to be probed. Examine the value of the root in relation to the values of its left and right offspring. If the value of the root is smaller than both of its offspring, we return it as the local minimum. If not, we go to the subtree in which the root value is bigger than the child value and repeat step 2. Repeat step 2 until a local minimum is discovered. This method enables us to remove half of the tree in each phase, since we only need to explore the subtrees where the local minimum may exist. Since the tree is complete and has a height of log(n), just log(n) probes are required to locate the local minimum. For instance, in a four-level full binary tree, finding a local minimum would require no more than four probes. First, we would examine the root, then the left or right kid (depending on which is smaller), then the left or right grandchild, and ultimately the left or right great-grandchild (which will be the local minimum if it exists). 