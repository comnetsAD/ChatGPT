Using a method similar to binary search is one way to obtain a local minimum of the whole binary tree T using just O(log n) probes to the nodes of T. Probe the nodes at the middle level of the tree, which includes the middle nodes of the tree. Compare the probed nodes' values to those of their parent nodes. If the value of a probed node is smaller than that of its parent node, go to the node's left subtree. If the value of a probed node is larger than that of its parent node, go to the node's right subtree. Repeat step 2 until reaching a leaf node that is the local minimum. This strategy enables us to remove one-half of the tree in each phase, since we only need to search the left or right subtrees where the local minimum may exist. Since the tree is complete and contains log(n) levels, just log(n) probes are required to locate the local minimum. In a four-level full binary tree, for instance, we would require no more than three probes to locate a local minimum. We would begin by probing the middle nodes at the second level of the tree, then the middle nodes at the third level, and lastly the left or right leaf node (which will be the local minimum if it exists) This method is only feasible if we know the middle level of the tree, which can be calculated in O(log n) operations. 