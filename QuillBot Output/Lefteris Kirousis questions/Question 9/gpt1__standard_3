We may use a divide-and-conquer strategy to locate a local minimum of the whole binary tree T. Start by probing the tree's root, which is the first node. The root's worth should be compared to the worth of its left and right offspring. It is a local minimum and we return it if the value of the root is smaller than the sum of both of its offspring. If not, we continue to the subtree where the root value is higher than the child value and repeat step 2 there. Recursively repeat step 2 until a local minimum is discovered. By simply searching the subtree where the local minimum may occur, we are able to remove half of the tree in each step using this method. Since the tree is complete and has height log(n), finding the local minimum only requires log(n) probes. For instance, we would need no more than four probes to locate a local minimum in a four-level full binary tree. We would examine the root first, then the smaller of the two children (left or right), the smaller of the two grandchildren (left or right), and ultimately the smaller of the two great-grandchildren (which will be the local minimum if it exists). 