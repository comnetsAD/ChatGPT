Assuming that the lengths of the edges are changed to 2le + 1, we would apply a modified version of Dijkstra's method to determine the shortest routes from node s to any other node t. The adjustment would be made to how we determine a vertex's "key" in the priority queue. We would use (2le + 1) times the distance from the source vertex s instead of the distance from the source vertex s. This would guarantee that the algorithm calculates the shortest pathways while taking into consideration the changed weights on the edges. The other steps of the process would stay the same; we would continually choose the vertex v from the priority queue with the least key, and by loosening the edge constraint, update the keys of all vertices nearby to v. (v,u). 