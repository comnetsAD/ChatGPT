False. Changing the edge lengths to 2le may alter the shortest pathways from node s to any other node t. Contrast this with the following graph, in which the edges e are individually given a weight le. +----1-—-+\s | |\ss +----2-—-+ t\s | |\s +——3——+ The one-hop connection between points s and t is the shortest route between the two. When 2le is substituted for the edge lengths, however, the shortest route changes from s->t to t->s with a length of 2. Proof: The shortest route from a single source to every other vertex is calculated using Dijkstra's method. The min-heap data structure is used to implement the priority queue. In the priority queue, the distance from the source vertex, s, is the key to a vertex's position. On a regular basis, the algorithm picks the vertex v with the shortest key from the priority queue and then relaxes the edge between v and its neighbors (v,u). With a constant k applied to all edge weights, the distance from s to any vertex stays the same but the vertex's key in the priority queue is increased by that factor. The min heap attribute, however, does not change; the smallest vertex in the heap before the multiplication will still be the smallest vertex in the heap after the multiplication. Because of this, the shortest pathways from s to any other node t may shift if the lengths of the edges are replaced by 2le. 